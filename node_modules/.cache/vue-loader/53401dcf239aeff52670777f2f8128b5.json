{"remainingRequest":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\src\\views\\widgets\\WidgetsDropdown.vue?vue&type=template&id=59613016&","dependencies":[{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\src\\views\\widgets\\WidgetsDropdown.vue","mtime":1581243256869},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577457009170},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1577457139923},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577457009170},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\vue-loader\\lib\\index.js","mtime":1577457139923}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}