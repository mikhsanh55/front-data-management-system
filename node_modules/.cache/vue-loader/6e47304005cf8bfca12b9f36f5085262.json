{"remainingRequest":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\src\\views\\auth\\Login.vue?vue&type=style&index=0&id=f571629e&scoped=true&lang=css&","dependencies":[{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\src\\views\\auth\\Login.vue","mtime":1580898190338},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\css-loader\\dist\\cjs.js","mtime":1577457135882},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1577457139923},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\postcss-loader\\src\\index.js","mtime":1577457138972},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577457009170},{"path":"D:\\xampp\\htdocs\\alkes\\version2\\alkes\\alkes\\node_modules\\vue-loader\\lib\\index.js","mtime":1577457139923}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KYm9keSB7DQogIG1hcmdpbjowOw0KICBwYWRkaW5nOjA7DQp9DQojbG9naW4tcGFnZSB7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL2Fsa2VzLmljb21taXRzLmNvLmlkL2Rva3Rlci5qcGcnKTsNCiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsNCiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOw0KICAvKmZpbHRlcjogYmx1cigycHgpOyovDQogIG1hcmdpbjogMCAhaW1wb3J0YW50Ow0KICB6LWluZGV4OiA2Ow0KICBvdmVyZmxvdy15OiBoaWRkZW47DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgaGVpZ2h0OiAxMDAlOw0KICB3aWR0aDogMTAwJTsNCiAgDQp9DQouZmFkZS1lbnRlci1hY3RpdmUsDQouZmFkZS1sZWF2ZS1hY3RpdmUgew0KICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7DQp9DQouZmFkZS1lbnRlciwNCi5mYWRlLWxlYXZlLXRvIHsNCiAgb3BhY2l0eTogMDsNCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center m-4\" id=\"login-page\">\r\n\r\n    <CRow class=\"mt-4\">\r\n      <CCol sm=\"12\">\r\n        <!-- <img src=\"../../assets/img/background/dokter.jpg\"> -->\r\n          <CCard>\r\n            <CCardHeader class=\"p-4\">\r\n              <div class=\"d-flex justify-content-around align-items-center\">\r\n                <h4 class=\"align-middle\">CV. SARANA ABDI BAKTI</h4>\r\n                <img class=\"align-middle ml-3\" src=\"./alkes-96x96.png\" width=\"40\" height=\"40\">  \r\n\r\n              </div>\r\n              <br>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm @submit.prevent=\"login\">\r\n                \r\n                <transition name=\"fade\">  \r\n                  <div v-if=\"errors.length > 0\" :class=\"{'d-none':errorHide}\">\r\n                    <small v-for=\"error in errors\" class=\"alert alert-danger d-block\">\r\n                      {{error}}\r\n                    </small>\r\n                  </div>\r\n                </transition>\r\n                <CInput\r\n                  placeholder=\"Email\"\r\n                  autocomplete=\"email\"\r\n                  v-model=\"form.email\"\r\n                >\r\n                  <template #prepend-content><CIcon name=\"cil-user\"/></template>\r\n                </CInput>\r\n                <CInput\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  autocomplete=\"curent-password\"\r\n                  v-model=\"form.password\"\r\n                >\r\n                  <template #prepend-content><CIcon name=\"cil-lock-locked\"/></template>\r\n                </CInput>\r\n                <br>\r\n                <CRow>\r\n                  <CCol col=\"12\">\r\n                    <CButton color=\"primary\" class=\"px-4 w-100 mt-3\" @click.prevent=\"login\" type=\"submit\" @keyup.enter=\"login\">\r\n                      <span>Masuk</span>\r\n                        <spring-spinner\r\n                          :class=\"{'d-none':notloading, 'd-inline-block':displayloading}\"\r\n                          :animation-duration=\"2000\"\r\n                          :size=\"10\"\r\n                          color=\"#fff\"\r\n                          class=\"align-middle pl-2\"\r\n                        />\r\n                       </CButton>\r\n                  </CCol>\r\n                  <CCol col=\"12\" class=\"d-flex justify-content-center mt-3 w-75\">\r\n                    <small><router-link to=\"/forgot-password\" class=\"px-0 w-100 mt-3\">Lupa password?</router-link></small>\r\n                  </CCol>\r\n                </CRow>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Import spinner component from third-party  \r\nimport { SpringSpinner } from 'epic-spinners'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      notloading:true, // for spinner toggle ( toggle d-none class )\r\n      displayloading:false, // for spinner toggle ( toggle d-inline-block class )\r\n      errorHide:false, // for error label toggle\r\n      form: {\r\n        email:null,\r\n        password:null\r\n      },\r\n      errors: [] // all errors message store here\r\n    }\r\n  },\r\n  components: {\r\n    SpringSpinner\r\n  },\r\n  methods: {\r\n    \r\n    validate() {\r\n      // Set errors array to 0 length\r\n      this.errors = []\r\n\r\n      // if elements is empty\r\n      if(!this.form.email) {\r\n        this.errors.push('Email is required')\r\n        this.notloading = true\r\n        this.displayloading = false\r\n      }\r\n\r\n      if(!this.form.password) {\r\n        this.errors.push('Password is required')\r\n        this.notloading = true\r\n        this.displayloading = false\r\n      }\r\n\r\n      // Hide all error label after 3 second\r\n      if(this.errors.length > 0) {\r\n        setTimeout(() => {\r\n          this.errorHide = true\r\n          this.errors = []\r\n          this.errorHide = false\r\n          return false\r\n        }, 3000)\r\n        return false\r\n      }\r\n      else {\r\n        return true\r\n      }\r\n    },\r\n    redirect() {\r\n      this.$router.replace('/')\r\n    },\r\n    login() {\r\n\r\n      // display spinner\r\n      this.notloading = false\r\n      this.displayloading = true\r\n\r\n      // perform validation\r\n      if(this.validate() == false) {\r\n        return false\r\n      }\r\n\r\n      let {email, password} = this.form\r\n\r\n      // perform login\r\n      let data = {email:email, password:password}\r\n\r\n      var formdata = new FormData();\r\n      formdata.append(\"email\", email);\r\n      formdata.append(\"password\", password);\r\n\r\n      var requestOptions = {\r\n        method: 'POST',\r\n        body: formdata,\r\n        redirect: 'follow'\r\n      }\r\n          \r\n      this.$store.dispatch('login', {email, password})\r\n        .then(res => {\r\n            let headers = new Headers()\r\n            headers.append('Authorization', 'bearer ' + localStorage.getItem('token'))\r\n            let options = {\r\n              method:'GET',\r\n              headers,\r\n              redirect:'follow'\r\n            }\r\n        })\r\n        .then(() => {\r\n          let level = localStorage.level, homepath = '/'\r\n          if(level == 3) {\r\n            homepath = '/po'\r\n          }\r\n          else if(level == 4) {\r\n            homepath = '/stock-in-out'\r\n          }\r\n          else {\r\n            homepath = '/'\r\n          }\r\n          this.$swal('Selamat Datang', 'Di Aplikasi Alkes', 'success')\r\n          setTimeout(() => {\r\n            this.notloading = true\r\n            this.displayloading = false\r\n            this.$swal.close()  \r\n            setTimeout(() => {\r\n              this.$router.replace({path: homepath})\r\n            }, 1000)\r\n          }, 3000)\r\n          \r\n        })\r\n        .catch(error => {\r\n          this.notloading = true\r\n          this.displayloading = false\r\n          this.form.password = ''\r\n          this.$swal('Email / Password salah', 'Coba lagi yah', 'error')\r\n          setTimeout(() => {\r\n            this.$swal.close()\r\n          }, 1500)\r\n          console.log(error.response)\r\n          return false\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    if(localStorage.getItem('token') != undefined) {\r\n      this.$router.replace({path:'/'})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  margin:0;\r\n  padding:0;\r\n}\r\n#login-page {\r\n  background-image: url('http://alkes.icommits.co.id/dokter.jpg');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  /*filter: blur(2px);*/\r\n  margin: 0 !important;\r\n  z-index: 6;\r\n  overflow-y: hidden;\r\n  position: fixed;\r\n  height: 100%;\r\n  width: 100%;\r\n  \r\n}\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"]}]}