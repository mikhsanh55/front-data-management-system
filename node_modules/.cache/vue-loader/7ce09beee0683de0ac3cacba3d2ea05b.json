{"remainingRequest":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mikhsanh/Documents/project/alkes/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mikhsanh/Documents/project/alkes/src/App.vue","mtime":1589070210622},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1581205341990},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1581205342201},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js","mtime":1581205405536}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjcmVhdGVkKCkgewogICAgCiAgCWxldCB1c2VyID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UudXNlciksIGN1cnJlbnRQYXRoID0gdGhpcy4kcm91dGVyLmN1cnJlbnRSb3V0ZS5wYXRoCgoKICAgICAgaWYoY3VycmVudFBhdGggIT0gJy9sb2dpbicgJiYgY3VycmVudFBhdGggIT0gJy9mb3Jnb3QtcGFzc3dvcmQnKSB7CiAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgIGZldGNoKGxvY2FsU3RvcmFnZS5iYXNlX2FwaSArICdrYXJ5YXdhbi8nICsgdXNlci5pZF9rYXJ5YXdhbiwgewogICAgICAgICAgICAgIG1ldGhvZDonUE9TVCcsCiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnYmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UudG9rZW4KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gKQogICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIGlmKHJlcy5zdGF0dXMgPT0gNDAxKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoJy9sb2dpbicpICAgICAgICAgICAgICAKICAgICAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlID0+IGNvbnNvbGUuZXJyb3IoZSkpCiAgICAgICAgICB9LCA2MDAwMCkKICAgICAgfQogICAgICAKICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <router-view></router-view>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  created() {\n    \n  \tlet user = JSON.parse(localStorage.user), currentPath = this.$router.currentRoute.path\n\n\n      if(currentPath != '/login' && currentPath != '/forgot-password') {\n          setInterval(() => {\n            fetch(localStorage.base_api + 'karyawan/' + user.id_karyawan, {\n              method:'POST',\n              headers: {\n                'Authorization': 'bearer ' + localStorage.token\n              }\n            } )\n            .then(res => {\n              if(res.status == 401) {\n                    this.$router.replace('/login')              \n              return false\n              }\n            })\n            .catch(e => console.error(e))\n          }, 60000)\n      }\n      \n  }\n}\n</script>\n\n<style lang=\"scss\">\n  // Import Main styles for this application\n  @import 'assets/scss/style';\n</style>\n"]}]}