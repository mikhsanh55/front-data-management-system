{"remainingRequest":"/home/ranmark/Documents/ikhsan/alkes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ranmark/Documents/ikhsan/alkes/src/containers/TheSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ranmark/Documents/ikhsan/alkes/src/containers/TheSidebar.vue","mtime":1580753717229},{"path":"/home/ranmark/Documents/ikhsan/alkes/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1580306576439},{"path":"/home/ranmark/Documents/ikhsan/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1580306576757},{"path":"/home/ranmark/Documents/ikhsan/alkes/node_modules/vue-loader/lib/index.js","mtime":1580306701317}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBuYXYgZnJvbSAnLi9fbmF2LmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RoZVNpZGViYXInLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVudTpKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5tZW51KSwKICAgICAgbWluaW1pemU6IGZhbHNlLAogICAgICBuYXY6IFt7CiAgICAgICAgX25hbWU6J0NTaWRlYmFyTmF2JywKICAgICAgICBfY2hpbGRyZW46SlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UubWVudSkKICAgICAgfV0sCiAgICAgIHNob3c6ICdyZXNwb25zaXZlJwogICAgfQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICAKICAgIHRoaXMuJHJvb3QuJG9uKCd0b2dnbGUtc2lkZWJhcicsICgpID0+IHsKICAgICAgY29uc3Qgc2lkZWJhck9wZW5lZCA9IHRoaXMuc2hvdyA9PT0gdHJ1ZSB8fCB0aGlzLnNob3cgPT09ICdyZXNwb25zaXZlJwogICAgICB0aGlzLnNob3cgPSBzaWRlYmFyT3BlbmVkID8gZmFsc2UgOiAncmVzcG9uc2l2ZScKICAgIH0pCiAgICB0aGlzLiRyb290LiRvbigndG9nZ2xlLXNpZGViYXItbW9iaWxlJywgKCkgPT4gewogICAgICBjb25zdCBzaWRlYmFyQ2xvc2VkID0gdGhpcy5zaG93ID09PSAncmVzcG9uc2l2ZScgfHwgdGhpcy5zaG93ID09PSBmYWxzZQogICAgICB0aGlzLnNob3cgPSBzaWRlYmFyQ2xvc2VkID8gdHJ1ZSA6ICdyZXNwb25zaXZlJwogICAgfSkKICB9LAp9Cg=="},{"version":3,"sources":["TheSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TheSidebar.vue","sourceRoot":"src/containers","sourcesContent":["<template>\n  <CSidebar \n    fixed \n    :minimize=\"minimize\"\n    :show.sync=\"show\"\n  >\n    <CSidebarBrand \n      :imgFull=\"{ width: 118, height: 36, alt: 'Logo', src: 'img/brand/ALKES.png'}\"\n      :imgMinimized=\"{ width: 118, height: 36, alt: 'Logo', src: 'img/brand/ALKES.png'}\"\n      :wrappedInLink=\"{ href: '/', target: '_self'}\"\n      class=\"pt-3 pb-3\"\n    />\n    <CRenderFunction flat :content-to-render=\"nav\"/>\n    <CSidebarMinimizer\n      class=\"d-md-down-none\"\n      @click.native=\"minimize = !minimize\"\n    />\n  </CSidebar>\n</template>\n  \n<script>\nimport nav from './_nav.js'\nexport default {\n  name: 'TheSidebar',\n  data () {\n    return {\n      menu:JSON.parse(localStorage.menu),\n      minimize: false,\n      nav: [{\n        _name:'CSidebarNav',\n        _children:JSON.parse(localStorage.menu)\n      }],\n      show: 'responsive'\n    }\n  },\n  mounted () {\n    \n    this.$root.$on('toggle-sidebar', () => {\n      const sidebarOpened = this.show === true || this.show === 'responsive'\n      this.show = sidebarOpened ? false : 'responsive'\n    })\n    this.$root.$on('toggle-sidebar-mobile', () => {\n      const sidebarClosed = this.show === 'responsive' || this.show === false\n      this.show = sidebarClosed ? true : 'responsive'\n    })\n  },\n}\n</script>\n"]}]}