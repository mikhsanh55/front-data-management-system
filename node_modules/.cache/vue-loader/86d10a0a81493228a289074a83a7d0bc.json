{"remainingRequest":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mikhsanh/Documents/project/alkes/src/views/produk/AddBarang.vue?vue&type=template&id=0a3f4b39&","dependencies":[{"path":"/home/mikhsanh/Documents/project/alkes/src/views/produk/AddBarang.vue","mtime":1588865134387},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1581205342201},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1581205405536},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1581205342201},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js","mtime":1581205405536}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}