{"remainingRequest":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mikhsanh/Documents/project/alkes/src/views/auth/Login.vue?vue&type=style&index=0&id=0e0d6e88&scoped=true&lang=css&","dependencies":[{"path":"/home/mikhsanh/Documents/project/alkes/src/views/auth/Login.vue","mtime":1584008479806},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/css-loader/dist/cjs.js","mtime":1581205403885},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1581205405536},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/postcss-loader/src/index.js","mtime":1581205405331},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1581205342201},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js","mtime":1581205405536}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYm9keSB7CiAgbWFyZ2luOjA7CiAgcGFkZGluZzowOwp9CiNsb2dpbi1wYWdlIHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy9kb2t0ZXIuanBnJyk7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOwogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsKICAvKmZpbHRlcjogYmx1cigycHgpOyovCiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7CiAgei1pbmRleDogNjsKICBvdmVyZmxvdy15OiBoaWRkZW47CiAgcG9zaXRpb246IGZpeGVkOwogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKICAKfQouZmFkZS1lbnRlci1hY3RpdmUsCi5mYWRlLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOwp9Ci5mYWRlLWVudGVyLAouZmFkZS1sZWF2ZS10byB7CiAgb3BhY2l0eTogMDsKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\n  <div class=\"d-flex justify-content-center m-4\" id=\"login-page\">\n\n    <CRow class=\"mt-4\">\n      <CCol sm=\"12\">\n        <!-- <img src=\"../../assets/img/background/dokter.jpg\"> -->\n          <CCard>\n            <CCardHeader class=\"p-4\">\n              <div class=\"d-flex justify-content-around align-items-center\">\n                <h4 class=\"align-middle\">CV. SARANA ABDI BAKTI</h4>\n                <img class=\"align-middle ml-3\" src=\"./alkes-96x96.png\" width=\"40\" height=\"40\">  \n\n              </div>\n              <br>\n            </CCardHeader>\n            <CCardBody>\n              <CForm @submit.prevent=\"login\">\n                <transition name=\"fade\">  \n                  <div v-if=\"errors.length > 0\" :class=\"{'d-none':errorHide}\">\n                    <small v-for=\"error in errors\" class=\"alert alert-danger d-block\">\n                      {{error}}\n                    </small>\n                  </div>\n                </transition>\n                <CInput\n                  placeholder=\"Email\"\n                  autocomplete=\"email\"\n                  v-model=\"form.email\"\n                >\n                  <template #prepend-content><CIcon name=\"cil-user\"/></template>\n                </CInput>\n                <CInput\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  autocomplete=\"curent-password\"\n                  v-model=\"form.password\"\n                >\n                  <template #prepend-content><CIcon name=\"cil-lock-locked\"/></template>\n                </CInput>\n                <br>\n                <CRow>\n                  <CCol col=\"12\">\n                    <CButton color=\"primary\" :disabled=\"loginAct === true\" class=\"px-4 w-100 mt-3\" @click.prevent=\"login\" type=\"submit\" @keyup.enter=\"login\">\n                      <span :class=\"{'d-none':loginAct}\">Masuk</span>\n                        <spring-spinner\n                          :class=\"{'d-none':notloading, 'd-inline-block':displayloading}\"\n                          :animation-duration=\"2000\"\n                          :size=\"10\"\n                          color=\"#fff\"\n                          class=\"align-middle pl-2\"\n                        /> \n                       </CButton>\n                  </CCol>\n                  <CCol col=\"12\" class=\"d-flex justify-content-center mt-3 w-75\">\n                    <small><router-link to=\"/forgot-password\" class=\"px-0 w-100 mt-3\">Lupa password?</router-link></small>\n                  </CCol>\n                </CRow>\n              </CForm>\n            </CCardBody>\n          </CCard>\n      </CCol>\n    </CRow>\n  </div>\n</template>\n\n<script>\n// Import spinner component from third-party  \nimport { SpringSpinner } from 'epic-spinners'\nimport CDataList from '@/components/CDataList.vue'\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      notloading:true, // for spinner toggle ( toggle d-none class )\n      displayloading:false, // for spinner toggle ( toggle d-inline-block class )\n      errorHide:false, // for error label toggle\n      loginAct:false,\n      form: {\n        email:null,\n        password:null\n      },\n      errors: [], // all errors message store here\n      karyawan: [{label: 'Ikhsan', value:13}, {label:'Hamidan', value:14}]\n    }\n  },\n  components: {\n    SpringSpinner,\n    CDataList\n  },\n  methods: {\n    assignK(val) {\n      console.log(val)\n    },\n    validate() {\n      // Set errors array to 0 length\n      this.errors = []\n\n      // if elements is empty\n      if(!this.form.email) {\n        this.errors.push('Email is required')\n        this.notloading = true\n        this.displayloading = false\n      }\n\n      if(!this.form.password) {\n        this.errors.push('Password is required')\n        this.notloading = true\n        this.displayloading = false\n      }\n\n      // Hide all error label after 3 second\n      if(this.errors.length > 0) {\n        setTimeout(() => {\n          this.errorHide = true\n          this.errors = []\n          this.errorHide = false\n          return false\n        }, 3000)\n        return false\n      }\n      else {\n        return true\n      }\n    },\n    redirect() {\n      this.$router.replace('/')\n    },\n    login() {\n\n      // display spinner\n      this.notloading = false\n      this.displayloading = true\n      // perform validation\n      if(this.validate() == false) {\n        return false\n      }\n\n      let {email, password} = this.form\n\n      // perform login\n      let data = {email:email, password:password}\n\n      var formdata = new FormData();\n      formdata.append(\"email\", email);\n      formdata.append(\"password\", password);\n\n      var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      }\n      this.loginAct = true    \n      this.$store.dispatch('login', {email, password})\n        .then(res => {\n            let headers = new Headers()\n            headers.append('Authorization', 'bearer ' + localStorage.getItem('token'))\n            let options = {\n              method:'GET',\n              headers,\n              redirect:'follow'\n            }\n        })\n        .then(() => {\n          let level = localStorage.level, homepath = '/'\n          if(level == 3) {\n            homepath = '/po'\n          }\n          else if(level == 4) {\n            homepath = '/stock-in-out'\n          }\n          else {\n            homepath = '/'\n          }\n          this.$swal('Selamat Datang', 'Di Aplikasi Alkes', 'success')\n          setTimeout(() => {\n            this.notloading = true\n            this.displayloading = false\n            this.loginAct = false\n            this.$swal.close()  \n            setTimeout(() => {\n              this.$router.replace({path: homepath})\n            }, 1000)\n          }, 3000)\n          \n        })\n        .catch(error => {\n          this.notloading = true\n          this.displayloading = false\n          this.form.password = ''\n          this.loginAct = false\n          this.$swal('Email / Password salah', 'Coba lagi yah', 'error')\n          setTimeout(() => {\n            this.$swal.close()\n          }, 1500)\n          console.log(error)\n          return false\n        });\n    }\n  },\n  created() {\n    if(localStorage.getItem('token') != undefined) {\n      this.$router.replace({path:'/'})\n    }\n\n    (function()\n    {\n      if( window.localStorage )\n      {\n        if( !localStorage.getItem('firstLoad') )\n        {\n          localStorage['firstLoad'] = true;\n          window.location.reload(true);\n        }  \n        else\n          localStorage.removeItem('firstLoad');\n      }\n    })();\n  }\n}\n</script>\n\n<style scoped>\nbody {\n  margin:0;\n  padding:0;\n}\n#login-page {\n  background-image: url('/dokter.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  /*filter: blur(2px);*/\n  margin: 0 !important;\n  z-index: 6;\n  overflow-y: hidden;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  \n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>"]}]}