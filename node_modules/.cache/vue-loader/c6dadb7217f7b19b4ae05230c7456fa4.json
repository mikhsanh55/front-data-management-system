{"remainingRequest":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mikhsanh/Documents/project/alkes/src/views/charts/CChartLineSimple.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mikhsanh/Documents/project/alkes/src/views/charts/CChartLineSimple.vue","mtime":1581205065380},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1581205342201},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1581205341990},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/cache-loader/dist/cjs.js","mtime":1581205342201},{"path":"/home/mikhsanh/Documents/project/alkes/node_modules/vue-loader/lib/index.js","mtime":1581205405536}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IENDaGFydExpbmUgfSBmcm9tICdAY29yZXVpL2NvcmV1aS12dWUtY2hhcnRqcycKaW1wb3J0IHsgZ2V0Q29sb3IsIGRlZXBPYmplY3RzTWVyZ2UgfSBmcm9tICdAY29yZXVpL2NvcmV1aS9kaXN0L2pzL2NvcmV1aS11dGlsaXRpZXMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ0NoYXJ0TGluZVNpbXBsZScsCiAgY29tcG9uZW50czogeyBDQ2hhcnRMaW5lIH0sCiAgcHJvcHM6IHsKICAgIC4uLkNDaGFydExpbmUucHJvcHMsCiAgICBib3JkZXJDb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdyZ2JhKDI1NSwyNTUsMjU1LC41NSknCiAgICB9LAogICAgYmFja2dyb3VuZENvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3RyYW5zcGFyZW50JwogICAgfSwKICAgIGRhdGFQb2ludHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFsxMCwgMjIsIDM0LCA0NiwgNTgsIDcwLCA0NiwgMjMsIDQ1LCA3OCwgMzQsIDEyXQogICAgfSwKICAgIGxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ1NhbGVzJwogICAgfSwKICAgIHBvaW50ZWQ6IEJvb2xlYW4sCiAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBTdHJpbmcKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwb2ludEhvdmVyQ29sb3IgKCkgewogICAgICBpZiAodGhpcy5wb2ludEhvdmVyQmFja2dyb3VuZENvbG9yKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcgogICAgICB9IGVsc2UgaWYgKHRoaXMuYmFja2dyb3VuZENvbG9yICE9PSAndHJhbnNwYXJlbnQnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYmFja2dyb3VuZENvbG9yCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuYm9yZGVyQ29sb3IKICAgIH0sCiAgICBkZWZhdWx0RGF0YXNldHMgKCkgewogICAgICByZXR1cm4gWwogICAgICAgIHsKICAgICAgICAgIGRhdGE6IHRoaXMuZGF0YVBvaW50cywKICAgICAgICAgIGJvcmRlckNvbG9yOiBnZXRDb2xvcih0aGlzLmJvcmRlckNvbG9yKSwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogZ2V0Q29sb3IodGhpcy5iYWNrZ3JvdW5kQ29sb3IpLAogICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IHRoaXMucG9pbnRCYWNrZ3JvdW5kQ29sb3IsCiAgICAgICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBnZXRDb2xvcih0aGlzLnBvaW50SG92ZXJDb2xvciksCiAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbAogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHBvaW50QmFja2dyb3VuZENvbG9yICgpIHsKICAgICAgaWYgKHRoaXMuYmFja2dyb3VuZENvbG9yID09PSAndHJhbnNwYXJlbnQnKSB7CiAgICAgICAgcmV0dXJuICcjZmZmJwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBnZXRDb2xvcih0aGlzLmJhY2tncm91bmRDb2xvcikKICAgICAgfQogICAgfSwKICAgIHBvaW50ZWRPcHRpb25zICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHhBeGVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvZmZzZXQ6IHRydWUsCiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJ3RyYW5zcGFyZW50JywKICAgICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6ICd0cmFuc3BhcmVudCcKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICBmb250U2l6ZTogMiwKICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogJ3RyYW5zcGFyZW50JwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIHlBeGVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwKICAgICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsCiAgICAgICAgICAgICAgICBtaW46IE1hdGgubWluLmFwcGx5KE1hdGgsIHRoaXMuZGF0YVBvaW50cykgLSA1LAogICAgICAgICAgICAgICAgbWF4OiBNYXRoLm1heC5hcHBseShNYXRoLCB0aGlzLmRhdGFQb2ludHMpICsgNQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgZWxlbWVudHM6IHsKICAgICAgICAgIGxpbmU6IHsKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEKICAgICAgICAgIH0sCiAgICAgICAgICBwb2ludDogewogICAgICAgICAgICByYWRpdXM6IDQsCiAgICAgICAgICAgIGhpdFJhZGl1czogMTAsCiAgICAgICAgICAgIGhvdmVyUmFkaXVzOiA0CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgc3RyYWlnaHRPcHRpb25zICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHhBeGVzOiBbewogICAgICAgICAgICBkaXNwbGF5OiBmYWxzZQogICAgICAgICAgfV0sCiAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgIH1dCiAgICAgICAgfSwKICAgICAgICBlbGVtZW50czogewogICAgICAgICAgbGluZTogewogICAgICAgICAgICBib3JkZXJXaWR0aDogMgogICAgICAgICAgfSwKICAgICAgICAgIHBvaW50OiB7CiAgICAgICAgICAgIHJhZGl1czogMCwKICAgICAgICAgICAgaGl0UmFkaXVzOiAxMCwKICAgICAgICAgICAgaG92ZXJSYWRpdXM6IDQKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBkZWZhdWx0T3B0aW9ucyAoKSB7CiAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnBvaW50ZWQgPyB0aGlzLnBvaW50ZWRPcHRpb25zIDogdGhpcy5zdHJhaWdodE9wdGlvbnMKICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHsKICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGNvbXB1dGVkRGF0YXNldHMgKCkgewogICAgICByZXR1cm4gZGVlcE9iamVjdHNNZXJnZSh0aGlzLmRlZmF1bHREYXRhc2V0cywgdGhpcy5kYXRhc2V0cyB8fCB7fSkKICAgIH0sCiAgICBjb21wdXRlZE9wdGlvbnMgKCkgewogICAgICByZXR1cm4gZGVlcE9iamVjdHNNZXJnZSh0aGlzLmRlZmF1bHRPcHRpb25zLCB0aGlzLm9wdGlvbnMgfHwge30pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["CChartLineSimple.vue"],"names":[],"mappingsfile":"CChartLineSimple.vue","sourceRoot":"src/views/charts","sourcesContent":["<template>\n  <CChartLine\n    :datasets=\"computedDatasets\"\n    :options=\"computedOptions\"\n    :labels=\"labels\"\n  />\n</template>\n\n<script>\nimport { CChartLine } from '@coreui/coreui-vue-chartjs'\nimport { getColor, deepObjectsMerge } from '@coreui/coreui/dist/js/coreui-utilities'\nexport default {\n  name: 'CChartLineSimple',\n  components: { CChartLine },\n  props: {\n    ...CChartLine.props,\n    borderColor: {\n      type: String,\n      default: 'rgba(255,255,255,.55)'\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    },\n    dataPoints: {\n      type: Array,\n      default: () => [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12]\n    },\n    label: {\n      type: String,\n      default: 'Sales'\n    },\n    pointed: Boolean,\n    pointHoverBackgroundColor: String\n  },\n  computed: {\n    pointHoverColor () {\n      if (this.pointHoverBackgroundColor) {\n        return this.pointHoverBackgroundColor\n      } else if (this.backgroundColor !== 'transparent') {\n        return this.backgroundColor\n      }\n      return this.borderColor\n    },\n    defaultDatasets () {\n      return [\n        {\n          data: this.dataPoints,\n          borderColor: getColor(this.borderColor),\n          backgroundColor: getColor(this.backgroundColor),\n          pointBackgroundColor: this.pointBackgroundColor,\n          pointHoverBackgroundColor: getColor(this.pointHoverColor),\n          label: this.label\n        }\n      ]\n    },\n    pointBackgroundColor () {\n      if (this.backgroundColor === 'transparent') {\n        return '#fff'\n      } else {\n        return getColor(this.backgroundColor)\n      }\n    },\n    pointedOptions () {\n      return {\n        scales: {\n          xAxes: [\n            {\n              offset: true,\n              gridLines: {\n                color: 'transparent',\n                zeroLineColor: 'transparent'\n              },\n              ticks: {\n                fontSize: 2,\n                fontColor: 'transparent'\n              }\n            }\n          ],\n          yAxes: [\n            {\n              display: false,\n              ticks: {\n                display: false,\n                min: Math.min.apply(Math, this.dataPoints) - 5,\n                max: Math.max.apply(Math, this.dataPoints) + 5\n              }\n            }\n          ]\n        },\n        elements: {\n          line: {\n            borderWidth: 1\n          },\n          point: {\n            radius: 4,\n            hitRadius: 10,\n            hoverRadius: 4\n          }\n        }\n      }\n    },\n    straightOptions () {\n      return {\n        scales: {\n          xAxes: [{\n            display: false\n          }],\n          yAxes: [{\n            display: false\n          }]\n        },\n        elements: {\n          line: {\n            borderWidth: 2\n          },\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4\n          }\n        }\n      }\n    },\n    defaultOptions () {\n      const options = this.pointed ? this.pointedOptions : this.straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n    },\n    computedDatasets () {\n      return deepObjectsMerge(this.defaultDatasets, this.datasets || {})\n    },\n    computedOptions () {\n      return deepObjectsMerge(this.defaultOptions, this.options || {})\n    }\n  }\n}\n</script>\n"]}]}